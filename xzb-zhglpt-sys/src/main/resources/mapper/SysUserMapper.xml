<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nfdw.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.nfdw.entity.SysUser">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="del_flag" jdbcType="TINYINT" property="delFlag"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="locking_date" jdbcType="TIMESTAMP" property="lockingDate"/>
    </resultMap>

    <sql id="userColumn">
        <trim suffix="" suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="username!=null">
                username,
            </if>
            <if test="password!=null">
                password,
            </if>
            <if test="age!=null">
                age,
            </if>
            <if test="email!=null">
                email,
            </if>
            <if test="photo != null">
                photo,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
    </sql>

    <sql id="userValue">
        <trim suffix="" suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="username!=null">
                #{username},
            </if>
            <if test="password!=null">
                #{password},
            </if>
            <if test="age!=null">
                #{age},
            </if>
            <if test="email!=null">
                #{email},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=TINYINT},
            </if>
        </trim>
    </sql>


    <select id="login" resultMap="BaseResultMap">
    select u.*,d.gzarea
    from sys_user u left join sys_department d on u.department_id = d.id
    where u.username=#{username,jdbcType=VARCHAR}
  </select>
    <select id="selectListByPage" parameterType="com.nfdw.entity.SysUser" resultMap="BaseResultMap">
        SELECT *
        from sys_user
        <where>
            del_flag=0
            <if test="username!=null and username!=''">and username like '%${username}%'</if>
            <if test="email!=null and email!=''">and email like '%${email}%'</if>
        </where>
        order by update_date desc
    </select>
    <select id="count" resultType="java.lang.Integer">
    select count(*) from sys_user
  </select>
    <insert id="add" parameterType="com.nfdw.entity.SysUser">
        insert into sys_user(
        <include refid="userColumn"/>
        ) values (
        <include refid="userValue"/>
        )
    </insert>
    <insert id="addSysUser" parameterType="com.nfdw.entity.SysUser">
        insert into sys_user(
        <include refid="userColumn"/>
        ) values (
        <include refid="userValue"/>
        )
    </insert>
    <select id="getPhoneStatus" parameterType="java.lang.String" resultType="java.lang.Integer">
      select status from sys_user where username=#{username}
    </select>
    <update id="updatePhoneStatus">
  	update sys_user set status=#{status} where username=#{username}
  </update>
    <delete id="delById" parameterType="java.lang.String">
    delete from sys_user where id=#{id}
  </delete>

    <select id="checkUser" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(1) from sys_user where username=#{username}
  </select>
    <update id="rePass" parameterType="com.nfdw.entity.SysUser">
    update sys_user set password=#{password,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR}
  </update>


    <select id="getUserByRoleId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select sysuser.id,sysuser.real_name,sysuser.username from sys_user sysuser inner join sys_role_user roleuser on sysuser.id = roleuser.user_id and roleuser.role_id = #{roleId,jdbcType=VARCHAR}
    limit #{page},#{limit}
  </select>

    <select id="countUserByRoleId" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) from sys_user sysuser inner join sys_role_user roleuser on sysuser.id = roleuser.user_id and roleuser.role_id = #{roleId,jdbcType=VARCHAR}
  </select>

    <select id="findBydepartmentId" parameterType="com.nfdw.entity.SysUser" resultMap="BaseResultMap">
    SELECT *FROM sys_user where department_id=#{departmentId,jdbcType=INTEGER}
  </select>

    <select id="onLine" resultType="java.lang.Integer">
  	select count(*) from sys_user where status=1
  </select>

    <update id="updateStatus">
  	update sys_user set status=#{status} where id=#{id,jdbcType=VARCHAR}
  </update>

    <select id="queryUserByRoleIdAndDepartmentId" resultMap="BaseResultMap">
        select su.id,su.real_name from sys_role_user sru join sys_user su on sru.user_id=su.id
        <where>
            <if test="roleId!=null and roleId!=''">and role_id=#{roleId}</if>
            <if test="departmentId!=null and departmentId!=''">and su.department_id=#{departmentId}</if>
        </where>
    </select>


    <select id="selectUser" resultType="com.nfdw.entity.CurrentUser">
        select * from sys_user WHERE  username = #{username}

    </select>
    <select id="getStudentType" resultType="String">
        select user_type from sys_user where username=#{username}
    </select>

</mapper>